name: TWRP 16 Builder

on:
  workflow_dispatch:
    inputs:
      TWRP_MANIFEST_URL:
        description: "TWRP manifest url"
        required: true
        default: "https://github.com/TWRP-Test/platform_manifest_twrp_aosp"
      TWRP_MANIFEST_BRANCH:
        description: "TWRP branch"
        required: true
        default: "twrp-16.0"
      DEVICE_TREE_URL:
        description: "Device tree urlL"
        required: true
        default: "https://github.com/kmiit/twrp_device_oplus_sm87xx"
      DEVICE_TREE_BRANCH:
        description: "Device tree branch"
        required: true
        default: "twrp-16.0"
      DEVICE_PATH:
        description: "Device path"
        required: true
        default: "device/oplus/sm87xx"
      DEVICE_NAME:
        description: "Device name"
        required: true
        default: "sm87xx"
      LUNCH_TARGET:
        description: "lunch twrp_ (default same as lunch target)"
        required: false
        default: ""
      BUILD_PARTITION:
        description: "Build partition"
        required: true
        default: "recovery"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Show build info
      id: show_build_info
      run: |
        {
          echo 'BUILD_INFO<<EOF'
          echo Manifest URL: ${{ github.event.inputs.TWRP_MANIFEST_URL }}
          echo Manifest Branch: ${{ github.event.inputs.TWRP_MANIFEST_BRANCH }}
          echo Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}
          echo Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}
          echo Device Path: ${{ github.event.inputs.DEVICE_PATH }}
          echo Device name: ${{ github.event.inputs.DEVICE_NAME }}
          echo Lunch target: ${{ github.event.inputs.LUNCH_TARGET }}
          echo Build Target: ${{ github.event.inputs.BUILD_PARTITION }}.img
          echo EOF
        } >> "$GITHUB_ENV"

    - name: Debug ZRAM module presence
      run: |
        set +e
        sudo apt update -y
        sudo apt install linux-modules-extra-$(uname -r) -y
        uname -a # 查看内核版本
        ls /lib/modules/$(uname -r)/kernel/drivers/block/zram/ # 检查zram模块文件是否存在
        lsmod | grep zram # 检查zram是否已经加载
        sudo modprobe zram # 尝试加载
        echo $? # 打印上一个命令的退出码
        lsmod | grep zram # 再次检查是否加载成功
        sudo apt-get update
        sudo apt-get install -y zram-tools # zram-tools 是一个方便的工具，可以帮助配置ZRAM
        # 禁用现有ZRAM设备（如果存在）
        sudo swapoff -a
        sudo zramctl --reset || true # 如果没有zram设备，这个命令可能会失败，所以加上 || true

        # 配置ZRAM设备
        # 这里我们创建一个ZRAM设备，大小为物理RAM的50%
        # 你可以根据需要调整大小。例如，1G 可以写成 --size 1G
        # 这里的例子是动态计算内存大小
        MEM_TOTAL_KB=$(grep MemTotal /proc/meminfo | awk '{print $2}')
        ZRAM_SIZE_KB=$((MEM_TOTAL_KB)) # 50% of RAM
        ZRAM_SIZE_MB=$((ZRAM_SIZE_KB / 1024)) # Convert to MB for clarity

        echo "Total RAM: ${MEM_TOTAL_KB} KB"
        echo "Configuring ZRAM size to: ${ZRAM_SIZE_MB} MB"

        # 创建一个zram设备 /dev/zram0
        sudo modprobe zram num_devices=1
        sudo zramctl --size ${ZRAM_SIZE_KB}K --alg lz4 /dev/zram0

        # 格式化zram设备为swap分区
        sudo mkswap /dev/zram0

        # 启用zram swap
        # priority 可以设置，数字越大，优先级越高，越会被优先使用
        sudo swapon -p 100 /dev/zram0

        # 验证ZRAM是否已启用
        swapon --show

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 32768
        # remove-dotnet: true
        # remove-android: true
        # remove-haskell: true
        # remove-codeql: true
        # remove-docker-images: true

    - name: Check Out
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Check swap
      run: |
        echo Current swapness:
        sudo cat /proc/sys/vm/swappiness
        echo Setting new swapness
        sudo sysctl -w vm.swappiness=100
        echo New swapness:
        sudo cat /proc/sys/vm/swappiness

    - name: Setup environment
      run: |
        # sudo rm -rf /usr/local/.ghcup
        export DEBIAN_FRONTEND=noninteractive
        sudo apt update && sudo apt upgrade -y
        sudo apt install repo -y
        git config user.name ${{ github.actor }}
        git config user.email ${{ github.actor }}@users.noreply.github.com
        echo -e "$BUILD_INFO" >> INFO.txt
        echo "Change log:" >> INFO.txt
        set +e
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null)
        if [ $? -eq 0 ]; then
          git log "$LAST_TAG"..HEAD --pretty=format:"- %h-%an: %s" >> INFO.txt
        else
          git log --pretty=format:"- %h-%an: %s" >> INFO.txt
        fi
        cat INFO.txt

    - name: Init source
      run: |
        repo init -u ${{ github.event.inputs.TWRP_MANIFEST_URL }} -b ${{ github.event.inputs.TWRP_MANIFEST_BRANCH }} --depth=1
        (while true; do echo "Syncing source..."; sleep 120; done) &
        KA_PID=$!
        repo sync
        kill $KA_PID && exit 0

    - name: Setup device
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ${{ github.event.inputs.DEVICE_PATH }} --depth=1
        
    - name: Build TWRP
      run: |
        rm -rf .repo # remove source
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        if [ -n "${{ github.event.inputs.LUNCH_TARGET }}" ]; then
          lunch twrp_${{ github.event.inputs.LUNCH_TARGET }}
        else
          lunch twrp_${{ github.event.inputs.DEVICE_NAME }}
        fi
        (while true; do echo `date +%T` "Building TWRP..."; free -h; sleep 10; done) &
        KA_PID=$!
        m ${{ github.event.inputs.BUILD_PARTITION }}image
        kill $KA_PID && exit 0

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: | 
          out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*vendor*.img
        name: TWRP-3.7.1-16-${{ github.event.inputs.DEVICE_NAME }}-${date +"%Y%m%d"}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body_path: INFO.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}